mtrcars %>%
filter ( cyl == 4)
mtcars %>%
filter ( cyl == 4)
exam %>% filter ( class != 1)
exam %>% filter ( korean > 50 )
exam %>% filter ( science <= 70 )
exam %>%
fliter ( korean > 50 & science <= 70)
exam %>%
filter ( korean > 50 & science <= 70)
exam %>%
filter ( korean > 50 & science <= 50)
exam %>% filter( class == 1 & korean >= 50)
mtcars %>%
filter( cyl >=6 & mpg > 20 )
exam %>%
filter ( korean >= 90 | science >= 90)
exam %>%
filter ( korean >= 90 | science >= 90)
exam %>%
filter ( class == 1 | class == 3 | class == 5 )
exam %>%
filter ( class %in% c( 1, 3, 5 ))
class1 <- exam %>%
filter( class == 1 )
class2 <- exam %>% filter ( class == 2)
mean ( class1$korean)
mean ( class2$korean)
exam %>%
select( class, korean, science)
exam %>%
select( -korean)
setwd ( "C:\\WorkspaceR" )
exam <- read.csv( 'exam.csv', header = T )
exam
library( dplyr)
exam %>% filter( class == 1 )
exam %>%
select( class, korean, science)
exam %>%
select( -korean)
exam %>%
filter ( class %in% c( 1, 3, 5 ))
exam %>%
select( class, korean, science)
exam %>%
filter ( class == 1 ) %>%
select ( korean)
exam %>%
filter ( class == 1 ) %>%
select ( korean)
exma%>%
filter ( id, korean ) %>%
head
exam %>%
filter ( id, korean ) %>%
head
exam %>%
filter ( class == 1 ) %>%
select ( korean)
iris %>%
filter ( Species == 'setosa')%>%
select ( Petal.Length, Petal, Width)%>%
tail
iris %>%
filter ( Species == 'setosa') %>%
select ( Petal.Length, Petal, Width) %>%
tail
iris %>%
filter ( Species == "setosa") %>%
select ( Petal.Length, Petal, Width) %>%
tail
iris %>%
filter ( Species == "setosa") %>%
select ( Petal.Length, Petal.Width) %>%
tail
exam %>%
arrange ( korean)
exam %>%
arrange( desc( korean))
mtcars %>%
filter( mpg, cyl ) %>%
arrange ( cyl, desc(mpg) )%>%
head
exam %>%
arrange( class, desc(korean))
mtcars %>%
select( mpg, cyl ) %>%
arrange ( cyl, desc(mpg) )%>%
head
mtcars %>%
filter( mpg >= 15.0) %>%
select( mpg, cyl ) %>%
arrange ( cyl, desc(mpg) )%>%
head( 15)
exam %>%
mutate ( total = korean + science ) %>%
head
exam %>%
mutate( total = korean + science,
average = ( korean + science ) / 2 ) %>%
head
exam %>%
mutate( grade = ifelse( science >= 60, 'pass', 'fail')) %>%
head
tot <- mutate( total = korean + science)
exam <- exam %>%
mutate ( total = korean + science,
average = ( korean + average ) / 2 )
exam <- exam %>%
exam <- exam %>%
mutate ( total = korean + science,
average = ( korean + average ) / 2 )
exam <- exam %>%
mutate( total = korean + science,
average = ( korean + science ) / 2 ) %>%
head
exam <- exam %>%
mutate( total = korean + science,
average = ( korean + science ) / 2 ) %>%
exma %>%
mutate( grade  = ifelse ( averge >= 90, 'A',
ifelse ( average >= 80, 'B',
ifelse ( average >= 70, 'C',
ifelse( average >= 60, 'D')))))%>%
head
exam %>%
mutate( grade  = ifelse ( averge >= 90, 'A',
ifelse ( average >= 80, 'B',
ifelse ( average >= 70, 'C',
ifelse( average >= 60, 'D')))))%>%
head
exam %>%
mutate( grade  = ifelse ( average >= 90, 'A',
ifelse ( average >= 80, 'B',
ifelse ( average >= 70, 'C',
ifelse( average >= 60, 'D')))))%>%
head
exam %>%
summarise ( mean_korean = mean ( korean ) )
exam %>%
group_by ( class ) %>%
summarise( mean_korean = mean (korean))
mtcars %>%
group_by ( cyl) %>%
summarise ( mean_mpg = mean ( mpg ) )
exam %>%
group_by ( class) %>%
summarise( mean_korean = mean (korean),
mean_science = mean (science),
median_korean = median( korean),
median_science = median( science),
n = n() )    # n() : 행의 개수 count
exam %>%
filter ( class %in% c( 1, 3, 5 ))
exam %>% filter( class == 1 )
exam %>% filter ( class != 1)
filter( exam, class == 1 )
exam %>% filter( class == 1 )
exam
exam <- read.csv( 'exam.csv', header = T )
exam
exam %>%
group_by ( class) %>%
summarise( mean_korean = mean (korean),
mean_science = mean (science),
median_korean = median( korean),
median_science = median( science),
n = n() )    # n() : 행의 개수 count
mtcars %>%
group_by( cyl, gear ) %>%
summarise( mean_mpg = mean(mpg) ) %>%
head
mtcars %>%
group_by ( cyl ) %>%
filter( gear == '4' ) %>%
mutate( tot_wt = sum ( wt ) ) %>%
summarise( mean_wt = mean(wt) ) %>%
arrange( desc( mean_wt ) )
mtcars %>%
distinct( cyl )
library ( ggplot2 )
month <- c( 1, 2, 3, 4, 5, 6 )
rain <- c( 55, 50, 45, 50, 60, 70)
df <- data.frame( month , rain)
df
ggplot( df, aes( x = month , y = rain) ) +
geom_bar( stat = "identify",
width = 0.7,
fill = 'steelblue' )
ggplot( df, aes( x = month , y = rain) ) +
geom_bar( stat = "identity",
width = 0.7,
fill = 'steelblue' )
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",       # 막대높이, identity = y축 default....
width = 0.7,             # 막대 폭
fill = 'blackpink' )     # 막대 색
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",       # 막대높이, identity = y축 default....
width = 0.7,             # 막대 폭
fill = 'darkpink' )     # 막대 색
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",       # 막대높이, identity = y축 default....
width = 0.7,             # 막대 폭
fill = 'darkred' )     # 막대 색
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtite( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = 'bold',
color = 'darkred' ) ) +
labs( x = "월 ", y = '강수량') +
coord_flip()
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtite( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = 'bold',
colour = 'darkred' ) ) +
labs( x = "월 ", y = '강수량') +
coord_flip()
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtite( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = 'bold',
colour = 'steelblue' ) ) +
labs( x = "월 ", y = '강수량') +
coord_flip()
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtite( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = 'bold',
colour = 'steelblue' ) ) +
labs( x = "월 ", y = '강수량')
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtite( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = 'bold',
colour = 'steelblue' ) ) +
labs( x = "월 ", y = '강수량') +
coord_flip()
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtite( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = 'bold',
colour = 'steelblue' ) ) +
labs( x = "월 ", y = '강수량') +
coord_flip()
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtite( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = "bold",
colour = "steelblue" ) ) +
labs( x = "월 ", y = '강수량') +
coord_flip()
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtitle( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = "bold",
colour = "steelblue" ) ) +
labs( x = "월 ", y = '강수량') +
coord_flip()
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtitle( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = "bold",
colour = "darkred" ) ) +
labs( x = "월 ", y = '강수량') +
coord_flip()
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtitle( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = "bold",
colour = "steelblue" ) ) +
labs( x = "월 ", y = '강수량') +
coord_flip()
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtitle( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = "bold",
colour = "darke" ) ) +
labs( x = "월 ", y = '강수량') +
coord_flip()
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtitle( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = "bold",
colour = "darked" ) ) +
labs( x = "월 ", y = '강수량') +
coord_flip()
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtitle( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = "bold",
colour = "darkred" ) ) +
labs( x = "월 ", y = '강수량') +
coord_flip()
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtitle( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = "bold",
colour = "darkred" ) ) +
labs( x = "월 ", y = '강수량')
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtitle( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = "bold",
colour = "darkred" ) ) +
labs( x = "월 ", y = '강수량') +
coord_flip()
ggplot( iris, aes( x = Petal.Length) ) +
geom_histogram ( binwidth = 0.5 )
ggplot ( iris, aes( x = Sepal.Length,
fill = Species,
color = Species )) +
geom_histogram( binwidth = 0.5 , position = 'dodge' ) +
theme ( legend.position = 'top')
ggplot ( data = iris, aes( x = Petal.Length,
y = Petal.Width) ) +
geom_point()
ggplot( data = iris, aes( x = Petal.Length,
y = Petal.Width,
color = species) ) +
geom_point( size = 3 ) +
ggtitle( " 꽃잎의 길이와 폭 " ) +
theme( plot.title = element_text( size= 25,
face = 'bold',
colour = 'steelblue'))
# 그룹으로 구분되는 산점도
ggplot( data = iris, aes( x = Petal.Length,
y = Petal.Width,
color = Species) ) +
geom_point( size = 3 ) +
ggtitle( " 꽃잎의 길이와 폭 " ) +
theme( plot.title = element_text( size= 25,
face = 'bold',
colour = 'steelblue'))
ggplot( df, aes( x = month , y = rain) ) + # dataset, aes( x축,y축)
geom_bar( stat = "identity",
width = 0.7,
fill = 'darkred' ) +
ggtitle( "월별 강수량 " ) +
theme( plot.title = element_text( size = 25,
face = "bold",
colour = "darkred" ) ) +
labs( x = "월 ", y = '강수량') +
coord_flip()
ggplot( data = iris, aes( x = Petal.Length,
y = Petal.Width,
color = Species) ) +
geom_point( size = 3 ) +
ggtitle( " 꽃잎의 길이와 폭 " ) +
theme( plot.title = element_text( size= 25,
face = 'bold',
colour = 'steelblue'))
ggplot( data = iris, aes( x = Petal.Length,
y = Petal.Width,
color = Species) ) +
geom_point( size = 3 ) +
ggtitle( " 꽃잎의 길이와 폭 " ) +
theme( plot.title = element_text( size= 25,
face = 'bold',
colour = 'steelblue'))+
labs( x = '꽃잎의 길이', y = '꽃잎의 폭')
ggplot( iris, aes( y = Petal.Length, fill = Species) ) +
geom_boxplot()
ggplot( iris, aes( y = Petal.Length) ) +
geom_boxplot( fill = "steelblue")
ggplot( iris, aes( y = Petal.Length, fill = Species) ) +
geom_boxplot()
#
# 선 그래프
#
year <- 1937:1960
cnt <- as.vector( airmiles)
df <- data.frame(year, cnt)
head( df)
ggplot( df, aes( x = year, y = cnt)) +
geom_line( col = 'darkred')
str( airmiles)
class( airmiles)
install.packages( "corrplot")
library( corrplot)
m <- cor( mtcars)
m
corrplot( m, method = "number")
corrplot( m, method = "pca")
corrplot( m, method = 'color')
corrplot( m, method = 'pie')
corrplot( m, method = 'color')
corrplot( m, method = 'number')
installed.packages( "Treemap")
install.packages( "treemap")
library( treemap)
library( treemap)
data( "GNI2014")
str ( GNI2014 )
data( GNI2014)
str ( GNI2014 )
treemap( GNI2014, index = c( "continent", "iso3" ),
vSize = "population",
vColor = "GNI",
type = "value",
bg.lables = "yellow")
# index : 계층 구조 표현
# vSize : 각 모양크기, vColor : 각 모양 색상
# type : 각 모양 색깔 방법, bg.labels : 전체 배경색
data( GNI2014)
str ( GNI2014 )
treemap( GNI2014, index = c( "continent", "iso3" ),
vSize = "population",
vColor = "GNI" ,
type = "value" ,
bg.lables = "yellow")
library( treemap)
data( GNI2014)
str ( GNI2014 )
treemap( GNI2014, index = c( "continent", "iso3" ),
vSize = "population",
vColor = "GNI" ,
type = "value" ,
bg.lables = "yellow")
treemap( GNI2014, index = c( "continent", "iso3" ),
vSize = "population",
vColor = "GNI" ,
type = "value" ,
bg.lables = "yellow")
treemap( GNI2014, index = c( "continent", "iso3" ),
vSize = "population",
vColor = "GNI" ,
type = "value" ,
bg.labels = "yellow")
library( MASS)
str( UScrime)
head( UScrime)
radius <- sqrt ( UScrime$pop)
adius <- sqrt ( UScrime$pop)
symbols( Uscrime$U2, UScrime$y,
circle = radius,
inches = 0.4,
fg = "white", bg = "lightgray",
lwd = 1.5,
xlab = 'unemployment 35~39 miles',
ylab = 'crime rate',
main = 'UScrime Data' )
radius <- sqrt ( UScrime$pop)
radius <- sqrt ( UScrime$Pop)
symbols( Uscrime$U2, UScrime$y,
circle = radius,
inches = 0.4,
fg = "white", bg = "lightgray",
lwd = 1.5,
xlab = 'unemployment 35~39 miles',
ylab = 'crime rate',
main = 'UScrime Data' )
symbols( UScrime$U2, UScrime$y,
circle = radius,
inches = 0.4,
fg = "white", bg = "lightgray",
lwd = 1.5,
xlab = 'unemployment 35~39 miles',
ylab = 'crime rate',
main = 'UScrime Data' )
text( UScrime$U2, UScrime$y,                # 문자로 출력 x, y 위치
1:nrow( UScrime),                     # 문자로 출력할 값
cex = 0.8,                            # 글자 크기
col = 'brown')                        # 글자 색
